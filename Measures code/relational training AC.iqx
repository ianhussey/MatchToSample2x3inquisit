************************************************
              RELATIONAL TRAINING (AC Relations)
************************************************
Authors: Sean Hughes (sean.hughes@ugent.be) & Ian Hussey (ian.hussey@ugent.be)
Last updated: 14-10-2016

************* general variables ****************

<defaults>
/ screencolor = black
/ txcolor = white
/ fontstyle = ("Arial", 5.00%)
/ inputdevice = keyboard
/ validkeys = (" ", "t")
/ halign = center
/ Com1BaudRate = 9600
</defaults>

<expt>
/ blocks = [1 = block1]
</expt>

<variables>
/ group = (1 of 1) (block1 = Relational_Training_Phase_AC_Block_1)
</variables>

<values>
/ errors_in_block_counter = 0
</values>

<expressions>
/ n_errors_in_block = (values.errors_in_block_counter)
</expressions>

************** stimuli exemplars ***************

<item A1>
/ 1 = "A1.png"
</item>

<item A2>
/ 1 = "A2.png"
</item>

<item C1>
/ 1 = "C1.png"
</item>

<item C2>
/ 1 = "C2.png"
</item>

***************** stimuli **********************

<picture A1_target>
/ numitems = 1
/ items = A1
/ position = (50, 30)
/ size = (25%, 25%)
</picture>

<picture A1_sample1>
/ numitems = 1
/ items = A1
/ position = (25, 70)
/ size = (25%, 25%)
</picture>

<picture A1_sample2>
/ numitems = 1
/ items = A1
/ position = (75, 70)
/ size = (25%, 25%)
</picture>

<picture A2_target>
/ numitems = 1
/ items = A2
/ position = (50, 30)
/ size = (25%, 25%)
</picture>

<picture A2_sample1>
/ numitems = 1
/ items = A2
/ position = (25, 70)
/ size = (25%, 25%)
</picture>

<picture A2_sample2>
/ numitems = 1
/ items = A2
/ position = (75, 70)
/ size = (25%, 25%)
</picture>

<picture C1_target>
/ numitems = 1
/ items = C1
/ position = (50, 30)
/ size = (25%, 25%)
</picture>

<picture C1_sample1>
/ numitems = 1
/ items = C1
/ position = (25, 70)
/ size = (25%, 25%)
</picture>

<picture C1_sample2>
/ numitems = 1
/ items = C1
/ position = (75, 70)
/ size = (25%, 25%)
</picture>

<picture C2_target>
/ numitems = 1
/ items = C2
/ position = (50, 30)
/ size = (25%, 25%)
</picture>

<picture C2_sample1>
/ numitems = 1
/ items = C2
/ position = (25, 70)
/ size = (25%, 25%)
</picture>

<picture C2_sample2>
/ numitems = 1
/ items = C2
/ position = (75, 70)
/ size = (25%, 25%)
</picture>

***************** labels etc *******************

<text continue>
/ numitems = 1
/ items= ("Press the spacebar to continue")
/ txcolor = white
/ txbgcolor = black
/ position = (50, 95)
/ fontstyle = ("Arial", 5.00%, true)
</text>

<text correctMessage>
/ numitems = 1
/ items= ("CORRECT")
/ txcolor = lightgreen
/ txbgcolor = black
/ position = (50, 50)
/ fontstyle = ("Arial", 5.00%, true)
</text>

<text errorMessage>
/ numitems = 1
/ items= ("WRONG")
/ txcolor = red
/ txbgcolor = black
/ position = (50, 50)
/ fontstyle = ("Arial", 5.00%, true)
</text>

<text blank>
/ numitems = 1
/ items = ("                     ")
/ txcolor = white
/ txbgcolor = black
/ erase = false
/ fontstyle = ("Arial", 5.00%, true)
</text>

<text left_key>
/ numitems = 1
/ items = ("Press E for")
/ txcolor = white
/ txbgcolor = black
/ position = (25, 90)
</text>

<text right_key>
/ numitems = 1
/ items = ("Press I for")
/ txcolor = white
/ txbgcolor = black
/ position = (75, 90)
</text>

******** Relational Training Phase *************

<trial A1_C1_C2> 
/ inputdevice = keyboard
/ correctresponse = ("e")
/ validresponse = ("e", "i")
/ responsemessage = ("e", correctMessage, 750)
/ responsemessage = ("i", errorMessage, 1500)
/ stimulustimes = [500 = A1_target; 1000 = C1_sample1, C2_sample2, left_key, right_key]
/ pretrialpause = 500
/ ontrialend = [if (trial.A1_C1_C2.error == true) values.errors_in_block_counter = values.errors_in_block_counter + 1]
</trial>

<trial A1_C2_C1> 
/ inputdevice = keyboard
/ correctresponse = ("i")
/ validresponse = ("e", "i")
/ responsemessage = ("i", correctMessage, 750)
/ responsemessage = ("e", errorMessage, 1500)
/ stimulustimes = [500 = A1_target; 1000 = C1_sample2, C2_sample1, left_key, right_key]
/ pretrialpause = 500
/ ontrialend = [if (trial.A1_C2_C1.error == true) values.errors_in_block_counter = values.errors_in_block_counter + 1]
</trial>

<trial A2_C1_C2> 
/ inputdevice = keyboard
/ correctresponse = ("i")
/ validresponse = ("e", "i")
/ responsemessage = ("i", correctMessage, 750)
/ responsemessage = ("e", errorMessage, 1500)
/ stimulustimes = [500 = A2_target; 1000 = C1_sample1, C2_sample2, left_key, right_key]
/ pretrialpause = 500
/ ontrialend = [if (trial.A2_C1_C2.error == true) values.errors_in_block_counter = values.errors_in_block_counter + 1]
</trial>

<trial A2_C2_C1> 
/ inputdevice = keyboard
/ correctresponse = ("e")
/ validresponse = ("e", "i")
/ responsemessage = ("e", correctMessage, 750)
/ responsemessage = ("i", errorMessage, 1500)
/ stimulustimes = [500 = A2_target; 1000 = C1_sample2, C2_sample1, left_key, right_key]
/ pretrialpause = 500
/ ontrialend = [if (trial.A2_C2_C1.error == true) values.errors_in_block_counter = values.errors_in_block_counter + 1]
</trial>

< trial exit>
/ trialcode = "exit"
/ stimulustimes = [ 1 = blank ]
/ trialduration = 1000
</trial>

*****************  block  **********************  

<block Relational_Training_Phase_AC_Block_1>
/ preinstructions = (RTP_instructions_1)
/ trials = [1-16 = noreplacenorepeat(A1_C1_C2, A1_C2_C1, A2_C2_C1, A2_C1_C2)]
/ branch = [if (expressions.n_errors_in_block > 2 && currentblocknumber < 5) block.Relational_Training_Phase_AC_Block_2 else block.exit]
</block>

<block Relational_Training_Phase_AC_Block_2>
/ onblockbegin = [values.errors_in_block_counter = 0]
/ preinstructions = (RTP_instructions_2)
/ trials = [1-16 = noreplacenorepeat(A1_C1_C2, A1_C2_C1, A2_C2_C1, A2_C1_C2)]
/ branch = [if (expressions.n_errors_in_block > 2 && currentblocknumber < 5) block.Relational_Training_Phase_AC_Block_3 else block.exit]
</block>

<block Relational_Training_Phase_AC_Block_3>
/ onblockbegin = [values.errors_in_block_counter = 0]
/ preinstructions = (RTP_instructions_2)
/ trials = [1-16 = noreplacenorepeat(A1_C1_C2, A1_C2_C1, A2_C2_C1, A2_C1_C2)]
/ branch = [if (expressions.n_errors_in_block > 2 && currentblocknumber < 5) block.Relational_Training_Phase_AC_Block_4 else block.exit]
</block>

<block Relational_Training_Phase_AC_Block_4>
/ onblockbegin = [values.errors_in_block_counter = 0]
/ preinstructions = (RTP_instructions_2)
/ trials = [1-16 = noreplacenorepeat(A1_C1_C2, A1_C2_C1, A2_C2_C1, A2_C1_C2)]
/ branch = [if (expressions.n_errors_in_block > 2 && currentblocknumber < 5) block.Relational_Training_Phase_AC_Block_5 else block.exit]
</block>

<block Relational_Training_Phase_AC_Block_5>
/ onblockbegin = [values.errors_in_block_counter = 0]
/ preinstructions = (RTP_instructions_2)
/ trials = [1-16 = noreplacenorepeat(A1_C1_C2, A1_C2_C1, A2_C2_C1, A2_C1_C2)]
</block>

<block exit>
/ trials = [1 = exit]
</block>

**************  instructions  ******************

<instruct>
/ fontstyle = ("Arial", 3.00%)
/ inputdevice = keyboard
/ nextkey = (" ")
/ nextlabel = "Press the spacebar to continue"
/ prevlabel = "Press the 't' key to go back"
/ prevkey = ("t")
/ windowsize = (800px, 600px)
</instruct>

<page RTP_instructions_1>
^^The next task is similar to what you've just done. However this time we will present some new images along with some you've seen before.
^^Again, your job is to figure out which image on the bottom of the screen goes with the image at the top. I.e., you have to figure out what images go together.
^^Note: you will only move on with the experiment once you have learned to respond very ACCURATELY.
^^Please place your fingers on the E and I keys.
</page>

<page RTP_instructions_2>
^^Well done. We will give you another opportunity to practice the same task.
^^Note: you will only move on with the experiment once you have learned to respond very ACCURATELY.
^^Please place your fingers on the E and I keys.
</page>

************** Test monkey  ********************

<monkey>
/ latencydistribution = normal(500, 100)
/ percentcorrect = 10
</monkey>